[{"title":"VSCode配置Python编译环境","url":"//post/595603fce748/","content":"前言最近因为学习AIGC的原因需要学习Python，因为用习惯了VSCode的各种快捷方式，因此做了一下python相关的配置，方便自己开发此文主记录Python相关的软件、VSCode插件安装、Python文件编译等\n软件准备下载地址：\n\nPython（选择自己需要的版本下载）：https://www.python.org/downloads/\nVScode：https://code.visualstudio.com/\n\n软件安装VSCodeVSCode安装很简单，基本上都是直接“下一步”即可\n\n在“同意协议”之后，会进入更换安装目录的步骤，需要更换的直接更换即可\n\n\nVSCode默认是英文版本，需要汉化的可安装以下插件（如何安装插件后面有说明）插件：Chinese (Simplified) (简体中文) Language Pack for Visual Studio Code\n\n\n\nPython\n具体的安装的各个环境介绍可参考：http://t.csdnimg.cn/PB6hA\n\n\n勾选   Add Python x.xx to PATH，可以省去自己配置环境变量的步骤\n点击 Customized installation，进入下一步，此步骤注意下 py launcher 有没有勾选，没有则勾上即可\n点击next，进入下一环节，修改 安装路径，换成自己方便找的位置\n点击 install，等待安装完成即可\n\n\n\n检查Python是否安装成功检查方法如下：\n\nwin + r，输入cmd，回车\n输入python，回车，出现一下界面则表示成功\n可以输入 exit() 退出当前模式，接下来的步骤还会使用~\n\n\n\n安装第三方的包使用Python自带的 pip 工具，安装 flake8、yapf\n\nflake8会检查编写代码时的不规范的地方和语法错误\nyapf是一个代码格式化工具，可以一键美化代码\n\n安装过程：\n\n在cmd中输入 pip list，检查需要安装的包是否已经安装，没有则进行下一步\n分别在cmd中输入以下命令，安装flake8和yapfpip install flake8pip install yapf\n\nVSCode 配置Python相关插件安装操作步骤：\n\n打开VSCode，按下快捷键Ctrl+Shift+X，进入插件管理页面\n在搜索框中输入以下插件名，点击对应的插件，安装（install）即可\n\n需要安装的插件主要有以下3个：\n\n*Python：提供对 Python 语言的支持\n*Python Debugger：用于 Visual Studio Code 的 Python 调试器扩展\nPython Snippets 3：Python3 代码包片段提示\n\n创建项目\n提前在创建一个用来放Python代码的文件夹\n在VSCode的资源管理器中，点击“打开文件夹”，选择创建好的文件夹\n可能会出现以下步骤，点击信任即可\n先选中目录下的空白区域（表示选中test这个文件夹，会有蓝色的边框框中），然后新建一个.py文件，输入print(&#39;hello world!&#39;)\n创建自动调试配置，此调试依赖于前面安装的Python Debugger插件，选中 Python Debugger，然后再选择Python文件即可，会自动打开生成的json文件\n切换回py文件，按F5，VSCode的终端就会运行py文件中的代码，输入print里面的内容\n\n\n至此，基础搭建就完成啦\n\n其他补充点\n修改调试的输出位置：如果觉得调试的内容在终端中输出，内容很杂乱，可以修改配置在调试控制台输出，可以修改以下文件配置，输出效果如下图（简洁很多）\n// 项目文件/.vscode/launch.json文件&#123;    &quot;configurations&quot;: [        &#123;\t        ...\t        // 原先的integratedTerminal替换成internalConsole            &quot;console&quot;: &quot;internalConsole&quot;        &#125;    ]&#125;\n\n\n在VSCode中切换不同的Python版本：在选择py文件的情况下，底部状态栏会显示当前对应的Python版本，点击版本号则可进行切换\n\n生成虚拟环境：选择对应的Python版本之后，在终端输入 python -m venv .venv，就会在项目根目录下生成对应的.venv环境文件夹，可用来安装一些第三方包啥的\n\n\n其他辅助插件推荐\nautoDocstring - Python Docstring Generator：函数注释生成器\n\n","categories":["Python"],"tags":["VSCode","Python"]},{"title":"记录：hexo + Keep + GitHub Pages 搭建博客出现的问题","url":"//post/471b956a6c8e/","content":"hexo 搭建教程# 快速上手：使用Hexo搭建并自定义个人博客：部署到gitee，没有主题配置# GitHub Pages + Hexo搭建个人博客网站，史上最全教程：部署到 GitHub Pages，部署到个人服务器，主题配置为Fluid\nkeep 搭建教程Keep 主题使用指南\nKeep + GitHub Pages官方推荐：# 如何使用 GitHub Actions 自动部署 Hexo 博客\nKeep 主题设置1. 官方推荐使用 npm install hexo-theme-keep这种方式要更改主题的配置，有以下2种方式：（先复制 node_modules&#x2F;hexo-theme-keep&#x2F;_config.yml）\n\n将复制的配置文件的名字修改成_config.keep.yml，然后粘贴到 your-hexo&#x2F;_config.yml 同级目录\n在 source 下创建 _data 文件夹，将复制的配置文件粘贴到 _data 文件夹中，将文件名改为keep.yml\n\n\n这2中配置文件的优先级是 keep.yml  &gt; _config.keep.yml\n\n2. 使用git clone https://github.com/XPoet/hexo-theme-keep themes/keep这种方式要更改主题的配置，可以采用上面的2种方式，也可在 themes&#x2F;keep&#x2F;_config.yml 文件中修改\n\nclone完主题之后，切记：先把keep文件夹下的.git文件删除如果忘记删除，可能会出现下面  问题1 的情况\n\n\nthemes&#x2F;keep&#x2F;_config.yml 配置文件优先级最高，不要更上面的方式混用，如果发现配置没更新，优先检查 themes里是否有对应的主题配置\n\n问题1. 整个keep文件夹提交不上去github原因：\n\n使用clone的方式 clone 主题，themes&#x2F;keep 文件夹中会有.git隐藏文件夹，提交代码之前没有先将此文件夹删除\n\n解决方式：\n\n先将 themes&#x2F;keep 下的 .git 文件夹删掉\n将 带有.git文件夹的父级文件夹 剪切到 另外的文件夹中，然后将项目重新提交一次到git\n再将 复制的文件夹 重新移回到本项目中，再次提交即可\n\n\n为什么不用命令操作呢？目前能百度或者Google到的命令操作会替换掉整个仓库的历史记录\n\n2. 不能使用pnpm install安装包，会出现模版编译报错的情况\n用 npm install 或 yarn install 即可\n\n","categories":["hexo"],"tags":["hexo","GitHub_Pages","Keep"]},{"title":"obsidian：GitHub-Sync 使用教程","url":"//post/9a4faa1ad9fd/","content":"\ngithub sync github仓库：https://github.com/kevinmkchin/Obsidian-GitHub-Sync\n\n插件下载\n打开配置 -&gt; 第三方插件（关闭安全模式）\n浏览 【社区插件市场】\n搜索 github sync\n\n启用插件\n\n右侧栏出现这个小图标，则表示启用成功\n\n配置说明\nGitHub username（GitHub用户名，填了token，可不填）\nGitHub personal access token（个人访问令牌，必填）\nGitHub repo URL for this vault（存放obsidian文件的仓库，格式：github.com&#x2F;用户名&#x2F;仓库名）\ngit binary location（电脑git的安装目录，需要注意路径的斜杠，“\\” 要改成 “&#x2F;”）\nAuto sync at interval (自动更新的时间)\n配置完成后，重启 obsidian\n\n\n\n","categories":["obsidian","插件"],"tags":["obsidian","GitHub-Sync"]}]